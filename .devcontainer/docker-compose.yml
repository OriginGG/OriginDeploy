version: '3'

services:
  workspace:
    build: 
      context: .
      dockerfile: Dockerfile
      args:
        # On Linux, you may need to update USER_UID and USER_GID below if not your local UID is not 1000.
        USER_UID: 1000
        USER_GID: 1000

    init: true
    volumes:
      # Forwards the local Docker socket to the container.
      - /var/run/docker.sock:/var/run/docker-host.sock 
      # Update this to wherever you want VS Code to mount the folder of your project
      - workspace:/workspace:cached

    # Overrides default command so things don't shut down after the process ends.
    entrypoint: /usr/local/share/docker-init.sh
    command: sleep infinity 
  
  frontend:
    image: node
    ports:
      - 3000:3000
    environment:
      REACT_APP_GQL_URI: http://localhost:5000/graphql
    entrypoint:
      - /bin/sh
      - -cex
      - |
        cd /workspace/NewOriginFrontEnd
        yarn start 
        sleep infinity
    volumes:
      - workspace:/workspace:cached
        
  backend:
    image: node
    ports:
      - 5000:5000
    environment:
      POSTGRAPHILE_PORT: 5000
    entrypoint:
      - /bin/sh
      - -cex
      - |
        cd /workspace/NewOriginBackend
        yarn start 
    volumes:
      - workspace:/workspace:cached

    # Uncomment the next four lines if you will use a ptrace-based debuggers like C++, Go, and Rust.
    # cap_add:
    #  - SYS_PTRACE
    # security_opt:
    #   - seccomp:unconfined

    # Uncomment the next line to use a non-root user for all processes.
    # user: vsworkspace

    # Use "forwardPorts" in **devcontainer.json** to forward an app port locally. 
    # (Adding the "ports" property to this file will not forward from a Codespace.)

volumes: 
  workspace: